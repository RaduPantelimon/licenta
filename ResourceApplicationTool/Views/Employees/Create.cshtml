@model ResourceApplicationTool.Models.Employee
@using ResourceApplicationTool.Models;
@using ResourceApplicationTool.Utils;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    var EmployeeID = "undefined";
</script>

<link href="~/Content/Styles/Employee/employeesCommonStyle.css" rel="stylesheet" />
<link href="~/Content/Styles/commonStyle.css" rel="stylesheet" />
<link href="~/Content/Styles/slickStyle.css" rel="stylesheet" />

<div class="mainHeaderLogo settings-logo" id="welcomeimg" data-type="sprite" data-offsetY="100" data-Xposition="50%" data-speed="-2"></div>

<h2 class="sec-title-huge sec-title">Create new profile</h2>
<hr class="sec-hr" />


<div class="main-form-container">
    @using (Html.BeginForm("Create", "Employees", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="form-group">
                <div id="main-profile-picture-div" class="user-profile-picture" style="background-image: url('@ViewBag.ImgIDSec');"></div>
                <div class="profile-header">
                    <h4 class="sec-title-large sec-title"> New Employee Profile </h4>
                    <h5 class="sec-title-small sec-title sec-title-italic"> No role selected </h5>

                    <label for="uploadProfilePicture" class="btn btn-default">
                        Upload Profile Picture
                        <input type="file" id="uploadProfilePicture" name="uploadProfilePicture" class="picture-input" />
                    </label>
                </div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="main_expandable">
                <div class="tvd-sub-header">
                    <table>
                        <tr>
                            <td>
                                <a class="main_expand_collapse">
                                    <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                    <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                </a>
                            </td>
                            <td>
                                <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                    General Information
                                </h1>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="row expandable-content">
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.MiddleInitial, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.MiddleInitial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MiddleInitial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.CNP, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.CNP, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CNP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="main_expandable">
                <div class="tvd-sub-header">
                    <table>
                        <tr>
                            <td>
                                <a class="main_expand_collapse">
                                    <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                    <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                </a>
                            </td>
                            <td>
                                <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                    Organizational Information
                                </h1>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="row expandable-content">
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.RoleID, "Role", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.ManagerID, "Manager", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.DropDownList("ManagerID", null, htmlAttributes: new { @class = "form-control", @id = "managers-input" })
                            @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.DepartmentID, "Department", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.DropDownList("DepartmentID", null, htmlAttributes: new { @class = "form-control", @id = "departments-input" })
                            @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label  col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="main_expandable">
                <div class="tvd-sub-header">
                    <table>
                        <tr>
                            <td>
                                <a class="main_expand_collapse">
                                    <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                    <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                </a>
                            </td>
                            <td>
                                <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                    Contact Information and Other
                                </h1>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="row expandable-content">
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.TextBoxFor(model => model.HireDate, new
                       {
                           @Value = "",
                           @class = "form-control",
                           @id = "hireDate-input",
                           @placeholder = "MM/DD/YYY"
                       })
                            @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.TerminationDate, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @Html.TextBoxFor(model => model.TerminationDate, new
                       {
                           @Value = "",
                           @class = "form-control",
                           @id = "terminationDate-input",
                           @placeholder = "MM/DD/YYY"
                       })
                            @Html.ValidationMessageFor(model => model.TerminationDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Administrator, "Permissions level", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3" })
                        <div class="col-md-9 col-sm-9">
                            @*@Html.EditorFor(model => model.Administrator, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Administrator, "", new { @class = "text-danger" })*@
                            @Html.DropDownListFor(model => model.Administrator, Const.Permissions, new Dictionary<string, object> { { "class", "form-control" } })
                            @*new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Administrator, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <button type="button"
                            class="btn btn-default btn-inverse"
                            id="cancel"
                            onclick="window.history.back()">
                        <i class="icon-remove icon-large"></i>
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    }
</div>
    @section Scripts {
         @Scripts.Render("~/bundles/jqueryval")
         @Scripts.Render("~/bundles/bootstrap-datepicker") ;
         @Scripts.Render("~/Content/bootstrap-sliderjs") ;
         @*@Scripts.Render("~/bundles/jquery-uijs");*@
         @Styles.Render("~/Content/bootstrap-datepickercss") ;
         @Styles.Render("~/Content/bootstrap-slidercss") ;
         @Styles.Render("~/Content/jquery-uicss") ;     
    }
<script>
    var departments = @Html.Raw(Json.Encode(ViewBag.Departments));
</script>

<script src="~/Scripts/employees/employees_common.js"></script>
<script src="~/Scripts/employees/employees_new.js"></script>
