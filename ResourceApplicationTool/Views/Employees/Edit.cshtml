@using ResourceApplicationTool.Models;
@using ResourceApplicationTool.Utils;

@model ResourceApplicationTool.Models.Employee

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    var EmployeeID = "@Model.EmployeeID";
</script>

<link href="~/Content/Styles/Employee/employeesCommonStyle.css" rel="stylesheet" />
<link href="~/Content/Styles/Employee/employeesEditStyle.css" rel="stylesheet" /> 
<link href="~/Content/Styles/commonStyle.css" rel="stylesheet" />   
<link href="~/Content/Styles/slickStyle.css" rel="stylesheet" /> 

<div class="mainHeaderLogo settings-logo" id="welcomeimg" data-type="sprite" data-offsetY="100" data-Xposition="50%" data-speed="-2"></div>

<h2 class="sec-title-huge sec-title" >Edit profile</h2>
<hr class="sec-hr" />

<div class="main-form-container">
    @using ((Html.BeginForm("Edit", "Employees", null, FormMethod.Post, new { enctype = "multipart/form-data" })))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.EmployeeID)

            <div class="form-group">
                <!--<img id="main-profile-picture" class="profile-picture" src="~/@**@ViewBag.ImgID" >-->
                <div id="main-profile-picture-div" class="user-profile-picture" style="background-image: url('@ViewBag.ImgIDSec');"></div>
                <div class="profile-header">
                    <h4 class="sec-title-large sec-title"> @Model.FirstName @Model.LastName </h4>
                    <h5 class="sec-title-small sec-title sec-title-italic"> @ViewBag.RoleName </h5>

                    <label for="uploadProfilePicture"  class="btn btn-default"> Upload Profile Picture 
                        <input type="file" id="uploadProfilePicture" name="uploadProfilePicture" class="picture-input" />
                    </label>
                </div>
            </div>

            <div class="main_expandable" >
                <div class="tvd-sub-header" >
                    <table>
                        <tr>
                            <td>
                                <a class="main_expand_collapse">
                                    <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                    <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                </a>
                            </td>
                            <td>
                                <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                    General Information
                                </h1>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="row expandable-content">
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3  col-xs-3" })
                        <div class="col-md-9 col-sm-9  col-xs-9">
                            @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                        <div class="col-md-9 col-sm-9 col-xs-9">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.MiddleInitial, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3  col-xs-3" })
                        <div class="col-md-9 col-sm-9  col-xs-9">
                            @Html.EditorFor(model => model.MiddleInitial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MiddleInitial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                        <div class="col-md-9 col-sm-9 col-xs-9">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (User.Identity.IsAuthenticated 
                        && Session[Const.CLAIM.USER_ACCESS_LEVEL] != null
                        && Session[Const.CLAIM.USER_ACCESS_LEVEL].ToString() == Const.PermissionLevels.Administrator)
                    {
                        //only the administrator can change the CNP
                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.CNP, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.EditorFor(model => model.CNP, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CNP, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                </div>
            </div>
            @if (User.Identity.IsAuthenticated && ((Session[Const.CLAIM.USER_ACCESS_LEVEL] != null
                                                                            && Session[Const.CLAIM.USER_ACCESS_LEVEL] != null
                                                                            && Session[Const.CLAIM.USER_ACCESS_LEVEL].ToString() == Const.PermissionLevels.Administrator) ||
                                                                            (Session[Const.CLAIM.USER_ID].ToString() == Model.ManagerID.ToString())))
            {
                //only the Manager or an Admin can change these settings
                <div class="main_expandable" >
                    <div class="tvd-sub-header" >
                        <table>
                            <tr>
                                <td>
                                    <a class="main_expand_collapse">
                                        <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                        <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                    </a>
                                </td>
                                <td>
                                    <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                        Organizational Information
                                    </h1>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="row expandable-content">
                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.RoleID, "Role", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (User.Identity.IsAuthenticated
                            && Session[Const.CLAIM.USER_ACCESS_LEVEL] != null
                            && Session[Const.CLAIM.USER_ACCESS_LEVEL].ToString() == Const.PermissionLevels.Administrator)
                        {
                            <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                                @Html.LabelFor(model => model.ManagerID, "Manager", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                                <div class="col-md-9 col-sm-9 col-xs-9">
                                    @Html.DropDownList("ManagerID", null, htmlAttributes: new { @class = "form-control", @id = "managers-input" })
                                    @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.ManagerID)
                        }
                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.DepartmentID, "Department", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.DropDownList("DepartmentID", null, htmlAttributes: new { @class = "form-control", @id = "departments-input" })
                                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label  col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="main_expandable">
                    <div class="tvd-sub-header" >
                        <table>
                            <tr>
                                <td>
                                    <a class="main_expand_collapse">
                                        <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                        <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                    </a>
                                </td>
                                <td>
                                    <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                        Contact Information and Other
                                    </h1>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="row expandable-content">

                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.TextBoxFor(model => model.HireDate, new
                           {
                               @Value = Model.HireDate.ToString("MM/dd/yyyy"),
                               @class = "form-control",
                               @id = "hireDate-input",
                               @placeholder = "MM/DD/YYY"
                           })
                                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.TerminationDate, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                            <div class="col-md-9 col-sm-9 col-xs-9">
                                @Html.TextBoxFor(model => model.TerminationDate, new
                           {
                               @Value = Model.TerminationDate.HasValue ? Model.TerminationDate.Value.ToString("MM/dd/yyyy") : "",
                               @class = "form-control",
                               @id = "terminationDate-input",
                               @placeholder = "MM/DD/YYY"
                           })
                                @Html.ValidationMessageFor(model => model.TerminationDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (User.Identity.IsAuthenticated && Session[Const.CLAIM.USER_ACCESS_LEVEL] != null
                                                            && Session[Const.CLAIM.USER_ACCESS_LEVEL] != null
                                                            && Session[Const.CLAIM.USER_ACCESS_LEVEL].ToString() == Const.PermissionLevels.Administrator)
                        {
                            //only admins can edit this field

                            <div class="form-group subsection col-md-6 col-lg-6 col-sm-12 col-xs-12">
                                @Html.LabelFor(model => model.Administrator, "Permission", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-3" })
                                <div class="col-md-9 col-sm-9 col-xs-9">
                                    @Html.DropDownListFor(model => model.Administrator, Const.Permissions, new Dictionary<string, object> { { "class", "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Administrator, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            <div class="main_expandable">
                <div class="tvd-sub-header" >
                    <table>
                        <tr>
                            <td>
                                <a class="main_expand_collapse">
                                    <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                    <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                </a>
                            </td>
                            <td>
                                <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                    Skills
                                </h1>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="form-group subsection row">
                    @foreach(SkillCategory skillCat in ViewBag.SkillCategories)
                    {
                        <div class="skill-category secondary_expandable">
                           
                            <table class="skill-category-table">
                                <tr>
                                    <td>
                                        <a class="secondary_expand_collapse">
                                            <img class="expandimg" src="~/Content/Pictures/expand-small.png" title="expand" height="12" width="12" align="absbottom" style="display: none;">
                                            <img class="collapseimg" src="~/Content/Pictures/collapse-small.png" title="collapse" height="12" width="12" align="absbottom" style="display: inline;">
                                        </a>
                                    </td>
                                    <td>
                                        <h5 class="skill-category-title">@skillCat.Title</h5>
                                    </td>
                                </tr>
                            </table>
                            <div class="skill-category-container row">
                                @for (var i = 0; i < Model.SkillLevels.Count; i++)
                                {

                                    if (Model.SkillLevelsList[i].Skill.CategoryID == skillCat.CategoryID)
                                    {
                                        <div class="employee-skill col-ld-6 col-md-6 col-sm-6 col-xs-12">

                                            <div class="control-label skill-label col-ld-6 col-md-6 col-sm-6 col-xs-4">
                                                <span class="skill-title">@Model.SkillLevelsList[i].Skill.Title</span>
                                               
                                            </div>
                                            <div class="col-ld-6 col-md-6 col-md-6 col-sm-6 col-xs-8">
                                                @Html.TextBoxFor(m => Model.SkillLevelsList[i].Level,
                                                                new Dictionary<string, object> { { "class", "form-control skill-slider-input" },
                                                                                                    { "data-slider-min", "0" },
                                                                                                    { "data-slider-max", "5" },
                                                                                                    { "data-slider-step ", "1" },
                                                                                                    { "data-slider-value", @Model.SkillLevelsList[i].Level },
                                                                                                    {"data-slider-tooltip","hide" }
                                                                }
                                                )
                                                <span class="skill-level-description">
                                                    @for (int j = 0; j < Const.SkillLevels.Length; j++)
                                                    {
                                                        if (Model.SkillLevelsList[i].Level == j)
                                                        {
                                                            <span class="@("skill-level-active skill-level" + j)">@Const.SkillLevels[j]</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="@("skill-level-hidden skill-level" + j)">@Const.SkillLevels[j]</span>
                                                        }

                                                    }
                                                </span>
                                                @Html.HiddenFor(m => Model.SkillLevelsList[i].SkillID)
                                                @Html.HiddenFor(m => Model.SkillLevelsList[i].EmployeeID)

                                            </div>
                                        </div>
                                    }

                                }
                            </div>
                        </div>
                    }
                </div>

            </div>

            <div class="main_expandable">
                <div class="tvd-sub-header">
                    <table>
                        <tr>
                            <td>
                                <a class="main_expand_collapse">
                                    <img class="expandimg" src="~/Content/Pictures/expand-sign.png" title="expand" height="18" width="18" align="absbottom" style="display: none;">
                                    <img class="collapseimg" src="~/Content/Pictures/collapse-sign.png" title="collapse" height="18" width="18" align="absbottom" style="display: inline;">
                                </a>
                            </td>
                            <td>
                                <h1 class="sec-title-large sec-title" data-scrollname="Projects" style="display: inline; bottom: 0px;">
                                    Educations
                                </h1>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="row expandable-content">
               
                    <button type="button" id='add-education' class="btn-primary education-button">Add Education</button>
                    <table id="educations-table" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th class="regular-element">Start Date</th>
                                <th>End Date</th>
                                <th>Degree</th>
                                <th width="100">Options</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- This will be populated in the client side-->
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="button-holder form-group">
                <div class="col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />

                    <button type="button"
                            class="btn btn-default btn-inverse"
                            id="cancel"
                            onclick="window.history.back()">
                        <i class="icon-remove icon-large"></i>
                        Cancel
                    </button>
                </div>
            </div>
        </div>


    }

    
</div>

<div id='dialog-modal' class='modal' data-url='/Educations/Create?@Const.QueryStringParams.isModal=1&@Const.QueryStringParams.employeeID=@Model.EmployeeID'>
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Add Education</h4>
    </div>
    <div class="modal-body">
        <div id='modal-body-content'>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button id="save-education-changes" type="button" class="btn btn-primary">Save changes</button>
    </div>
</div>

<div id="modal-loader">
    <img src="~/Content/Pictures/ajax-loader.gif" height="75" width="75"  class="modal-loader-picture" />
    <div class="modal-loader-backdrop"></div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-datepicker");
    @Scripts.Render("~/Content/bootstrap-sliderjs");
    @*@Scripts.Render("~/bundles/jquery-uijs");*@


    @Styles.Render("~/Content/bootstrap-datepickercss");
    @Styles.Render("~/Content/bootstrap-slidercss");
    @Styles.Render("~/Content/jquery-uicss");
}
<script>
    var departments = @Html.Raw(Json.Encode(ViewBag.Departments));
</script>

<script src="~/Scripts/employees/employees_common.js"></script>
<script src="~/Scripts/employees/employees_edit.js"></script>
